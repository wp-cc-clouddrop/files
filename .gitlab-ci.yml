image: docker:19.03.1

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  SPRING_PROFILES_ACTIVE: gitlab-ci
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"


services:
  - docker:19.03.1-dind

stages:
  - build
  - package
  - deploy

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository

maven-build:
  image: maven:3-jdk-8
  stage: build
  script: "mvn $MAVEN_CLI_OPTS package spring-boot:repackage -B -DskipTests=true"
  artifacts:
    paths:
      - target/*.jar

docker-build:
  stage: package
  script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN docker-hub.informatik.haw-hamburg.de
  - docker build -t docker-hub.informatik.haw-hamburg.de/wp-cc-clouddrop/files-service .
  - docker push docker-hub.informatik.haw-hamburg.de/wp-cc-clouddrop/files-service
  tags: [dind, docker]

cloud-deploy:
  stage: deploy
  environment:
    name: Dev
  image: docker-hub.informatik.haw-hamburg.de/wp-cc-clouddrop/cloudrop/deploy
  script:
    # get kubectl context from corresponding deployment target
    - ./login-cluster.sh
    # deploy new image!
    - kubectl version
    - kubectl -n default rollout restart deployment/files-svc
